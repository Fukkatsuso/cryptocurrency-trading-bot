name: Test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
    paths-ignore:
      - "cloud-functions/**"
      - "doc/**"
      - "scheduler/**"
      - "LICENSE"
      - "README.md"
      - ".editorconfig"
      - ".gitignore"

env:
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_HOST: db
  MYSQL_PORT: 3306
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MYSQL_DSN: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@tcp(127.0.0.1:3306)/${{ secrets.MYSQL_DATABASE }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
  BITFLYER_API_KEY: ${{ secrets.BITFLYER_API_KEY }}
  BITFLYER_API_SECRET: ${{ secrets.BITFLYER_API_SECRET }}
  PRODUCT_CODE: ${{ secrets.PRODUCT_CODE }}
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
  COOKIE_HASHKEY: ${{ secrets.COOKIE_HASHKEY }}
  COOKIE_BLOCKKEY: ${{ secrets.COOKIE_BLOCKKEY }}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set .env file
        env:
          ENV_FILE: .env
        run: |
          echo MYSQL_USER="$MYSQL_USER" >> "$ENV_FILE"
          echo MYSQL_PASSWORD="$MYSQL_PASSWORD" >> "$ENV_FILE"
          echo MYSQL_HOST="$MYSQL_HOST" >> "$ENV_FILE"
          echo MYSQL_PORT="$MYSQL_PORT" >> "$ENV_FILE"
          echo MYSQL_DATABASE="$MYSQL_DATABASE" >> "$ENV_FILE"
          echo GCS_BUCKET="$GCS_BUCKET" >> "$ENV_FILE"
          echo BITFLYER_API_KEY="$BITFLYER_API_KEY" >> "$ENV_FILE"
          echo BITFLYER_API_SECRET="$BITFLYER_API_SECRET" >> "$ENV_FILE"
          echo PRODUCT_CODE="$PRODUCT_CODE" >> "$ENV_FILE"
          echo SLACK_BOT_TOKEN="$SLACK_BOT_TOKEN" >> "$ENV_FILE"
          echo SLACK_CHANNEL_ID="$SLACK_CHANNEL_ID" >> "$ENV_FILE"
          echo COOKIE_HASHKEY="$COOKIE_HASHKEY" >> "$ENV_FILE"
          echo COOKIE_BLOCKKEY="$COOKIE_BLOCKKEY" >> "$ENV_FILE"

      - name: Set sa_key file
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > sa_key

      # schedulerは起動させない
      - name: docker-compose up
        run: |
          docker-compose up -d trader dashboard db

      - name: Install migrate
        run: |
          curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | sudo apt-key add -
          echo "deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/migrate.list
          sudo apt-get update
          sudo apt-get install -y migrate

      - name: Migrate DB (up)
        run: |
          migrate -path "./db/migrations/" -database "$MYSQL_DSN" up

      - name: Test trader
        run: |
          docker-compose exec -T trader go test -v ./...

      - name: Test dashboard
        run: |
          docker-compose exec -T dashboard go test -v ./...
